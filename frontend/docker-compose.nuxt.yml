version: '2.1'

services:
  frontend0:
    build:
      context: ./frontend
    working_dir: /usr/src/app
    restart: unless-stopped
    volumes:
      - /usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy
    environment:
      - AUTH_ORIGIN=http://localhost
      - PORT=3000
      - HOST=0.0.0.0
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/unihub
    ports:
      - "3000:3000"
      - "5555:5555"

  db:
    image: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
      - ./postgresql.conf:/var/lib/postgresql/data/pgdata/postgresql.conf
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 10


#  backend:
#    build:
#      context: ./api
#    ports:
#      - 8000:8000
#    depends_on:
#      - db
#    restart: unless-stopped

  rev_proxy:
    image: nginx:1.24.0-alpine
    volumes:
      - ./nginx.nuxt.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend0
#      - backend
    restart: unless-stopped

volumes:
  db_data: